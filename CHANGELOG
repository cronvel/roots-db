
v0.34.0
-------

Maybe breaking: .setAttachment()/.getAttachment()/.removeAttachment() are now sync and compatible with AttachmentSet, saving is delayed upon Document's .commit() or .save()


v0.33.1
-------

AttachmentSet bugfixed


v0.33.0
-------

BREAKING: Yet another attachment refacto (but for the better), now you are not creating/saving attachments all by yourself, but you are using only higher level methods


v0.32.2
-------

Proxy improvements, staging of Attachment improvements


v0.32.1
-------

Attachment: make some property not-enumerable (to be out of JSON-stringify, useful for RestQuery)


v0.32.0
-------

Maybe breaking: Document now proxify to Attachment


v0.31.1
-------

Attachments: fix metadata, should be always available as an empty object, never null


v0.31.0
-------

Attachments: supports for fileSize (with expectations), for custom content metadata and public URL


v0.30.3
-------

Fix: when Document#reload() failed to reload, now it reject with with a 'notFound'


v0.30.2
-------

Exm dependency


v0.30.1
-------

Fix an EXM bug


v0.30.0
-------

Breaking: use Exm for managing extensions


v0.29.3
-------

Hash error have an 'expected' and 'actual' property


v0.29.2
-------

Attachment Hash are now in base64 instead of hex


v0.29.1
-------

Fix Attachment checksum for stream not updating internal Document


v0.29.0
-------

Attachment now supports checksum/hash


v0.28.0
-------

Maybe breaking: now using WHATWG URL instead of legacy url


v0.27.8
-------

Fix collection init issues


v0.27.7
-------

Attachment refacto, now supporting drivers


v0.27.6
-------

Dependencies


v0.27.5
-------

Fix a nasty link validation bug, when we directly pass a Document instance


v0.27.4
-------

Index with collation


v0.27.3
-------

Better 'versionDuplicateKey' error detection


v0.27.2
-------

Indexes hash/name changed again (using new hash-kit .fingerprint() that is consistent over properties order)


v0.27.1
-------

Fix bad name for internal property: indexedLinkProperties -> indexedLinks, to better reflect the schema


v0.27.0
-------

Maybe breaking: indexing links should be done using 'links' instead of 'properties'


v0.26.8
-------

Fix some .findEach() issues


v0.26.7
-------

New: Collection#findEach()


v0.26.6
-------

Dependencies


v0.26.5
-------

Fix a potentially critical issue with nested proxies (anything that have to call a constructor, like Array#splice() does, would had crashed)


v0.26.4
-------

Catch and re-throw a validator error like it should


v0.26.3
-------

Fix a bug iin anyCollection link: now Document instance are supported as link and will be sanitized correctly


v0.26.2
-------

dependencies


v0.26.1
-------

New: options 'depth' specify the depth-limit for deep-population


v0.26.0
-------

BREAKING CHANGE: now Collection instances need to call [async] .init(), because attachments check are now longer done synchronously inside the constructor


v0.25.6
-------

Dependencies


v0.25.5
-------

New: Document#reload() and Document#refresh()


v0.25.4
-------

Dependencies


v0.25.3
-------

Now on document proxy set, a doormen.isEqual() test is performed, avoiding creating unnecessary versions and DB patch


v0.25.2
-------

Support for builtin 'default function' in schema
versioning properties are turned from 'system' to 'system-content' tag


v0.25.1
-------

Dependencies


v0.25.0
-------

Link validation fixed (but it's flagged BREAKING because it touches very sensitive parts of the code)


v0.24.0
-------

Breaking (but probably ok) -- new doormen schema config 'opaque', that forbid any patch inside said object


v0.23.14
--------

Document#clone() fixed


v0.23.13
--------

Upgrading dependencies


v0.23.12
--------

Upgrading dependencies


v0.23.11
--------

Document cloning


v0.23.10
--------

Fix userland 'minLength' for 'multiLink'


v0.23.9
-------

Dependencies upgraded


v0.23.8
-------

Fixing critical doormen bug


v0.23.7
-------

Fixing versioning race conditions


v0.23.6
-------

Fix indexing of versions


v0.23.5
-------

Add a (more x2) fallback for turning on versioning on a collection after some data were already inserted


v0.23.4
-------

Add a (more) fallback for turning on versioning on a collection after some data were already inserted


v0.23.3
-------

Add a fallback for turning on versioning on a collection after some data were already inserted


v0.23.2
-------

Versioned items are now saved to the version collection on .delete()
dead-link clean-up is bypassed on versionCollection documents


v0.23.1
-------

Add 'versioning' to the schema


v0.23.0
-------

_modified -> _lastModified (on unstable new versioning feature)


v0.22.4
-------

Dependencies upgraded


v0.22.3
-------

Fix the new versioning feature, when using .commit()


v0.22.2
-------

New feature: auto-versioning of collection!


v0.22.1
-------

Fix new 'anyCollection' feature to works with backLink and populate


v0.22.0
-------

New 'anyCollection' option for type: 'link'


v0.21.13
--------

Dependencies upgraded


v0.21.12
--------

Issue warning when the connection string contains percent-encoded parts


v0.21.11
--------

Doormen dependency (enabling 'nullIsValue' and 'nullIsUndefined' flags)


v0.21.10
--------

Dependencies (doormen)


v0.21.9
-------

Better error message for 'keyTooLargeToIndex' error


v0.21.8
-------

Dependencies


v0.21.7
-------

Fix: _id now sanitize to ObjectId like it should (so Rest Query filter on _id could work)


v0.21.6
-------

Report _id as indexed by default


v0.21.5
-------

Dead-links behavior and auto-repair on discovery (Document#geLink(), and 'populate')


