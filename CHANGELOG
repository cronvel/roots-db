
v0.45.5
-------

Check that 'allowedCollections' is correct when used in the schema


v0.45.4
-------

Support for allowedCollections array for anyCollection links


v0.45.3
-------

Fix MongoDB query-object bug


v0.45.2
-------

Lot of index refacto, improvements, bugixes, as well as more informative logs


v0.45.1
-------

Collection#indexedProperties refacto


v0.45.0
-------

MAYBE BREAKING: Wildcard indexes and wildcard sorts


v0.44.14
--------

Support for wildcards in .find() request and the like


v0.44.13
--------

New Doormen type: datetime


v0.44.12
--------

Doormen dependency (support for 'numberToString' sanitizer)


v0.44.11
--------

Doormen dependency (support for 'toStringEmpty' sanitizer)


v0.44.10
--------

API fix: Collection#countFound() does not force a queryObject anymore, defaulting to {}


v0.44.9
-------

New API: Collection#countFound() -- instead of returning documents, just returns the number of found documents


v0.44.8
-------

Import: support for post-processor and link post-processor


v0.44.7
-------

String Kit dependency


v0.44.6
-------

Importer: fix issue with compoundProperties not logging missing errors on a CSV


v0.44.5
-------

Importer can now log errors if there are missing properties on a CSV


v0.44.4
-------

Import now support retrieving documents from DB for further usage (links)


v0.44.3
-------

Dependencies


v0.44.2
-------

Setting a counter


v0.44.1
-------

Fix missing change system-content -> systemContent


v0.44.0
-------

BREAKING: .findEach() removed, replaced by .findGenerator() which is way more flexible and allow 'for await' constructs


v0.43.7
-------

RootsDB now supports simple JSON export


v0.43.6
-------

Dependencies


v0.43.5
-------

Import: support for multi-links


v0.43.4
-------

Change tag of _frozen: system -> system-content, so it will be serialized for RestQuery consumers


v0.43.3
-------

More (again) informative error message for frozen/immutable/internal-read-only errors


v0.43.2
-------

More informative error message for frozen/immutable/internal-read-only errors


v0.43.1
-------

Add a 'code' property to frozen/immutable/internal-read-only errors


v0.43.0
-------

API: 'canLock' -> 'lockable', 'canFreeze' -> 'freezable'


v0.42.3
-------

Internal RootsDB properties are now restricted


v0.42.2
-------

New feature: immutable document's properties


v0.42.1
-------

New feature: freeze/unfreeze a document


v0.42.0
-------

BREAKING: fixing bad API name versionCollection -> versionsCollection, for consistencies, since collections have plural names


v0.41.6
-------

New counter collection


v0.41.5
-------

Remove MongoDB deprecated options


v0.41.4
-------

MongoDB driver version


v0.41.3
-------

MongoDB driver version


v0.41.2
-------

Remove long standing debugs from the populate algo


v0.41.1
-------

Import: new param 'embeddedDedupProperties' to dedup embedded based on a list of properties


v0.41.0
-------

MAYBE BREAKING: Now the sanitiser for AnyCollection link accept ID@collection syntax
add _collection property to Document __enumerate__ deep proxy method


v0.40.10
--------

Import refacto, now with its own Class


v0.40.9
-------

Import: fixing minor bugs related to links


v0.40.8
-------

Import: empty strings are no more considered as a valid link ID


v0.40.7
-------

Force zstd compression


v0.40.6
-------

Bugfix: importing with specific per-file format options fixed


v0.40.5
-------

Import: fix previous split statistics


v0.40.4
-------

Import: split statistics for embedded documents


v0.40.3
-------

New: Batch#filterAsync()


v0.40.2
-------

Improved Batch Array prototype's method support: it returns a Batch or an Array depending on what make sense for that method (e.g.: .map() returns an Array while .filter() returns a Batch)


v0.40.1
-------

New: Batch#populate()


v0.40.0
-------

BREAKING: back-links are stored as arrays and proxified as arrays even when empty


v0.39.12
--------

Breaking: import can now have preFilter (applied on raw data) and postFilter (applied on raw mapped data), it supports static values, and it is now possible to restore 'anyCollection' links


v0.39.11
--------

Import: use duplicateKeyRetries key from the mapping file, if present


v0.39.10
--------

Import: support for deduplicators


v0.39.9
-------

String-kit dependency


v0.39.8
-------

Doormen upgraded


v0.39.7
-------

Minor fixes + useless logs removed


v0.39.6
-------

Now an index can be used as the default for collation


v0.39.5
-------

Wildcard populate (aka populate *)


v0.39.4
-------

Attempt to free some memory during import


v0.39.3
-------

Import: stats improved (per collection stats)


v0.39.2
-------

Import: 'onDuplicateKey' hook, embedded links (using wildcard)


v0.39.1
-------

Better links imports + import stats for progress bar


v0.39.0
-------

MAYBE BREAKING: the Collection instance now have a .url and .connectionUrl properties, the former does not contain the user:password part while the later does (before this release, only .url existed and it had user:password)


v0.38.5
-------

New import feature


v0.38.4
-------

New: Collection#findIdList() have the 'partial' option returning a sort of partial document


v0.38.3
-------

New: Collection#findIdList()


v0.37.3
-------

When the connection string is like mongodb+srv://... remove the +srv part to get the correct driver


v0.37.2
-------

New method: Collection#createBatch( count )


v0.37.1
-------

Fake data generator API -- to go along with the new extension 'faker'


v0.37.0
-------

Migration from mongodb v3 to v5


v0.36.8
-------

New: attachmentAppendExtension option


v0.36.7
-------

Fix an error to error status


v0.36.6
-------

Fix array of AttachmentSet issue


v0.36.5
-------

Dependencies


v0.36.4
-------

Dependencies


v0.36.3
-------

Fix a schema bug with lockable collection


v0.36.2
-------

Now we can lock local (non-upstream) documents, they will be created/saved locked on the first .save()


v0.36.1
-------

Fix few lock issues


v0.36.0
-------

Breaking change -- Lock API changed for both RootsDB and drivers: .lockingFind() now supports a call without actionFn that needs manual lock releases (returning an object with lockId, batch, and eventually otherBatch), also the actionFn signature changed, starting with a lockId as argument #1


v0.35.2
-------

Fix missing checksum/hash when using an AttachmentSet


v0.35.1
-------

Patch bad behavior of .getLink()/.getLinkDetails() with options.attachment:true


v0.35.0
-------

Breaking: API changed for .getLink() and .getLinkDetails(): acceptAttachment argument have move to options.attachment


v0.34.2
-------

AttachmentStream: destroy stream when added to an ended attachmentStream


v0.34.1
-------

.getLink() with acceptAttachment arg set to true can return AttachmentSet now


v0.34.0
-------

Maybe breaking: .setAttachment()/.getAttachment()/.removeAttachment() are now sync and compatible with AttachmentSet, saving is delayed upon Document's .commit() or .save()


v0.33.1
-------

AttachmentSet bugfixed


v0.33.0
-------

BREAKING: Yet another attachment refacto (but for the better), now you are not creating/saving attachments all by yourself, but you are using only higher level methods


v0.32.2
-------

Proxy improvements, staging of Attachment improvements


v0.32.1
-------

Attachment: make some property not-enumerable (to be out of JSON-stringify, useful for RestQuery)


v0.32.0
-------

Maybe breaking: Document now proxify to Attachment


v0.31.1
-------

Attachments: fix metadata, should be always available as an empty object, never null


v0.31.0
-------

Attachments: supports for fileSize (with expectations), for custom content metadata and public URL


v0.30.3
-------

Fix: when Document#reload() failed to reload, now it reject with with a 'notFound'


v0.30.2
-------

Exm dependency


v0.30.1
-------

Fix an EXM bug


v0.30.0
-------

Breaking: use Exm for managing extensions


v0.29.3
-------

Hash error have an 'expected' and 'actual' property


v0.29.2
-------

Attachment Hash are now in base64 instead of hex


v0.29.1
-------

Fix Attachment checksum for stream not updating internal Document


v0.29.0
-------

Attachment now supports checksum/hash


v0.28.0
-------

Maybe breaking: now using WHATWG URL instead of legacy url


v0.27.8
-------

Fix collection init issues


v0.27.7
-------

Attachment refacto, now supporting drivers


v0.27.6
-------

Dependencies


v0.27.5
-------

Fix a nasty link validation bug, when we directly pass a Document instance


v0.27.4
-------

Index with collation


v0.27.3
-------

Better 'versionDuplicateKey' error detection


v0.27.2
-------

Indexes hash/name changed again (using new hash-kit .fingerprint() that is consistent over properties order)


v0.27.1
-------

Fix bad name for internal property: indexedLinkProperties -> indexedLinks, to better reflect the schema


v0.27.0
-------

Maybe breaking: indexing links should be done using 'links' instead of 'properties'


v0.26.8
-------

Fix some .findEach() issues


v0.26.7
-------

New: Collection#findEach()


v0.26.6
-------

Dependencies


v0.26.5
-------

Fix a potentially critical issue with nested proxies (anything that have to call a constructor, like Array#splice() does, would had crashed)


v0.26.4
-------

Catch and re-throw a validator error like it should


v0.26.3
-------

Fix a bug iin anyCollection link: now Document instance are supported as link and will be sanitized correctly


v0.26.2
-------

dependencies


v0.26.1
-------

New: options 'depth' specify the depth-limit for deep-population


v0.26.0
-------

BREAKING CHANGE: now Collection instances need to call [async] .init(), because attachments check are now longer done synchronously inside the constructor


v0.25.6
-------

Dependencies


v0.25.5
-------

New: Document#reload() and Document#refresh()


v0.25.4
-------

Dependencies


v0.25.3
-------

Now on document proxy set, a doormen.isEqual() test is performed, avoiding creating unnecessary versions and DB patch


v0.25.2
-------

Support for builtin 'default function' in schema
versioning properties are turned from 'system' to 'system-content' tag


v0.25.1
-------

Dependencies


v0.25.0
-------

Link validation fixed (but it's flagged BREAKING because it touches very sensitive parts of the code)


v0.24.0
-------

Breaking (but probably ok) -- new doormen schema config 'opaque', that forbid any patch inside said object


v0.23.14
--------

Document#clone() fixed


v0.23.13
--------

Upgrading dependencies


v0.23.12
--------

Upgrading dependencies


v0.23.11
--------

Document cloning


v0.23.10
--------

Fix userland 'minLength' for 'multiLink'


v0.23.9
-------

Dependencies upgraded


v0.23.8
-------

Fixing critical doormen bug


v0.23.7
-------

Fixing versioning race conditions


v0.23.6
-------

Fix indexing of versions


v0.23.5
-------

Add a (more x2) fallback for turning on versioning on a collection after some data were already inserted


v0.23.4
-------

Add a (more) fallback for turning on versioning on a collection after some data were already inserted


v0.23.3
-------

Add a fallback for turning on versioning on a collection after some data were already inserted


v0.23.2
-------

Versioned items are now saved to the version collection on .delete()
dead-link clean-up is bypassed on versionCollection documents


v0.23.1
-------

Add 'versioning' to the schema


v0.23.0
-------

_modified -> _lastModified (on unstable new versioning feature)


v0.22.4
-------

Dependencies upgraded


v0.22.3
-------

Fix the new versioning feature, when using .commit()


v0.22.2
-------

New feature: auto-versioning of collection!


v0.22.1
-------

Fix new 'anyCollection' feature to works with backLink and populate


v0.22.0
-------

New 'anyCollection' option for type: 'link'


v0.21.13
--------

Dependencies upgraded


v0.21.12
--------

Issue warning when the connection string contains percent-encoded parts


v0.21.11
--------

Doormen dependency (enabling 'nullIsValue' and 'nullIsUndefined' flags)


v0.21.10
--------

Dependencies (doormen)


v0.21.9
-------

Better error message for 'keyTooLargeToIndex' error


v0.21.8
-------

Dependencies


v0.21.7
-------

Fix: _id now sanitize to ObjectId like it should (so Rest Query filter on _id could work)


v0.21.6
-------

Report _id as indexed by default


v0.21.5
-------

Dead-links behavior and auto-repair on discovery (Document#geLink(), and 'populate')


